{"version":3,"sources":["audio/snare.mp3","audio/crash.mp3","audio/bass.wav","audio/floor-tom.wav","audio/tom-tom.wav","audio/ride.wav","audio/hi-hat.wav","audio/hi-hat-closed.mp3","audio/gong.wav","components/drums.js","actions/drumsAction.js","components/drumsInfo.js","App.js","reducers/drumsReducer.js","reducers/combineReducers.js","reducers/drumsDisplayReducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Drums","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","current","handleClick","bind","assertThisInitialized","handleKeyPress","document","addEventListener","e","d","_this2","target","children","currentTime","play","persist","classList","add","setTimeout","remove","itemClicked","_this3","drumData","forEach","keyCode","currentDrum","querySelector","concat","key","click","itemPressed","_this4","displayDrums","map","drum","react_default","a","createElement","id","onClick","className","tabIndex","src","audio","Component","connect","drum_data","dispatch","data","type","payload","DrumsInfo","display","drumz","App","drumsInfo","drums","rootReducer","combineReducers","snare","crash","bass","floorTom","tomTom","ride","hiHat","hiHatClosed","gong","arguments","length","undefined","action","assign","c","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.929fa0ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snare.29931dfa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/crash.ab3cc766.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bass.5e9cce80.wav\";","module.exports = __webpack_public_path__ + \"static/media/floor-tom.01c7d131.wav\";","module.exports = __webpack_public_path__ + \"static/media/tom-tom.b40f796f.wav\";","module.exports = __webpack_public_path__ + \"static/media/ride.3a196551.wav\";","module.exports = __webpack_public_path__ + \"static/media/hi-hat.f84399ad.wav\";","module.exports = __webpack_public_path__ + \"static/media/hi-hat-closed.0d385804.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gong.5010ef2a.wav\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { drumClicked } from \"../actions/drumsAction\";\nimport { drumPressed } from \"../actions/drumsAction\";\n\nclass Drums extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'active'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress); \n  }\n  handleClick(e, d) {\n    e.target.children[0].currentTime = 0;\n    e.target.children[0].play();\n    e.persist()\n    e.target.classList.add(this.state.current);\n    setTimeout(() => {\n      e.target.classList.remove(this.state.current);\n    }, 100);\n    this.props.itemClicked(d);\n  }\n  handleKeyPress(e) {\n    this.props.drumData.drumData.forEach(d => {\n      if (e.keyCode === d.keyCode) {\n        let currentDrum = document.querySelector(`#key-${d.key}`);\n        currentDrum.children[0].currentTime = 0;\n        currentDrum.click()\n        currentDrum.classList.add(this.state.current);\n        setTimeout(() => {\n          currentDrum.classList.remove(this.state.current);\n        }, 100);\n        this.props.itemPressed(d);\n      }\n    });\n  }\n  render() {\n    let displayDrums = this.props.drumData.drumData.map(drum => {\n      return (\n        <li\n          key={drum.id}\n          onClick={e => this.handleClick(e, drum)}\n          id={`key-${drum.key}`}\n          className={`drum-pad`}\n          tabIndex=\"0\"\n        >\n          {drum.key}\n          <audio src={drum.audio} className=\"clip\" id={drum.key} />\n        </li>\n      );\n    });\n    return (\n      <div className=\"display-drums-container\">\n        <ul>{displayDrums}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(drum_data) {\n  return {\n    drumData: drum_data\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    itemClicked: data => {\n      dispatch(drumClicked(data));\n    },\n    itemPressed: data => {\n      dispatch(drumPressed(data));\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Drums);\n","export function drumClicked(clicked) {\n  // console.log(\"drumsAction: action is \", clicked);\n  return {\n    type: \"DRUM_CLICKED\",\n    payload: clicked\n  };\n}\n\nexport function drumPressed(pressed) {\n  // console.log(\"drumsAction: action is \", pressed);\n  return {\n    type: \"DRUM_PRESSED\",\n    payload: pressed\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass DrumsInfo extends Component {\n  render() {\n    // console.log(\"drums info props\", this.props.data.drumz);\n    let display =\n      this.props.data.drumz === null\n        ? \"Start Playing!\"\n        : this.props.data.drumz.type;\n    return (\n      <div className=\"drums-info-container\">\n        <h1>{display}</h1>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(data) {\n  return {\n    data\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(DrumsInfo);\n","import React, { Component } from \"react\";\nimport Drums from \"./components/drums\";\nimport DrumsInfo from \"./components/drumsInfo\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App drum-machine-container\" id=\"drum-machine\">\n        <div className=\"display-container\" id=\"display\">\n          <DrumsInfo />\n          <Drums />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default function(state = null, action) {\n  switch (action.type) {\n    case \"DRUM_CLICKED\":\n      // console.log(\"drumsReducer, DRUM_CLICKED: drum was clicked\", action);\n      const clickedDrum = Object.assign({ c: 4, d: 5 }, action.payload);\n      return clickedDrum;\n    case \"DRUM_PRESSED\":\n      // console.log(\"drumsReducer, DRUM_PRESSED: drum was pressed\", action);\n      const pressedDrum = Object.assign({ c: 4, d: 5 }, action.payload);\n      return pressedDrum;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport drumData from './drumsDisplayReducer';\nimport drumz from './drumsReducer';\n\nconst rootReducer = combineReducers({\n\tdrumData,\n\tdrumz\n});\n\nexport default rootReducer;","// “Sound effects obtained from https://www.zapsplat.com“\n// https://www.musicradar.com/news/drums/sampleradar-1000-free-drum-samples-229460\n// http://www.findsounds.com/ISAPI/search.dll\nimport snare from \"../audio/snare.mp3\";\nimport crash from \"../audio/crash.mp3\";\nimport bass from \"../audio/bass.wav\";\nimport floorTom from \"../audio/floor-tom.wav\";\nimport tomTom from \"../audio/tom-tom.wav\";\nimport ride from \"../audio/ride.wav\";\nimport hiHat from \"../audio/hi-hat.wav\";\nimport hiHatClosed from \"../audio/hi-hat-closed.mp3\";\nimport gong from \"../audio/gong.wav\";\n\n// import bigFootHh from \"../audio/old/hi-hat.wav\";\n// 81, 87, 69, 65, 83, 68, 90, 88, 67\nexport default function drumData() {\n  return [\n    {\n      id: 1,\n      key: \"Q\",\n      // keyCode: \"q\",\n      keyCode: 81,\n      type: \"Snare\",\n      audio: snare\n      // audio: bigFootHh\n    },\n    {\n      id: 2,\n      key: \"W\",\n      // keyCode: \"w\",\n      keyCode: 87,\n      type: \"Crash\",\n      audio: crash\n      // audio: bigFootHh\n    },\n    {\n      id: 3,\n      key: \"E\",\n      // keyCode: \"e\",\n      keyCode: 69,\n      type: \"Kick drum\",\n      audio: bass\n      // audio: bigFootHh\n    },\n    {\n      id: 4,\n      key: \"A\",\n      // keyCode: \"a\",\n      keyCode: 65,\n      type: \"Floor tom\",\n      audio: floorTom\n      // audio: bigFootHh\n    },\n    {\n      id: 5,\n      key: \"S\",\n      // keyCode: \"s\",\n      keyCode: 83,\n      type: \"Tom-tom\",\n      audio: tomTom\n      // audio: bigFootHh\n    },\n    {\n      id: 6,\n      key: \"D\",\n      // keyCode: \"d\",\n      keyCode: 68,\n      type: \"Ride\",\n      audio: ride\n      // audio: bigFootHh\n    },\n    {\n      id: 7,\n      key: \"Z\",\n      // keyCode: \"z\",\n      keyCode: 90,\n      type: \"Hi-hat\",\n      audio: hiHat\n      // audio: bigFootHh\n    },\n    {\n      id: 8,\n      key: \"X\",\n      // keyCode: \"x\",\n      keyCode: 88,\n      type: \"Closed hi-hat\",\n      audio: hiHatClosed\n      // audio: bigFootHh\n    },\n    {\n      id: 9,\n      key: \"C\",\n      // keyCode: \"c\",\n      keyCode: 67,\n      type: \"Gong\",\n      audio: gong\n      // audio: bigFootHh\n    }\n  ];\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers/combineReducers.js\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}